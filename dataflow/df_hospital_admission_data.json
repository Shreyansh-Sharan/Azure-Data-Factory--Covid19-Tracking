{
	"name": "df_hospital_admission_data",
	"properties": {
		"folder": {
			"name": "Covid Reporting Source"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_hospital_admission",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionSource"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "CountryLookupSource"
				},
				{
					"dataset": {
						"referenceName": "ds_Date_Dimension",
						"type": "DatasetReference"
					},
					"name": "DateDimension"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_Hospital_admission_daily",
						"type": "DatasetReference"
					},
					"name": "DestinationDaily"
				},
				{
					"dataset": {
						"referenceName": "ds_Hospital_admission_weekly",
						"type": "DatasetReference"
					},
					"name": "DestinationWeekly"
				}
			],
			"transformations": [
				{
					"name": "RenameColumns"
				},
				{
					"name": "LookupCountryCode"
				},
				{
					"name": "SelectPostLookup"
				},
				{
					"name": "SeparationWeeklyDaily"
				},
				{
					"name": "DerivedYearWeek"
				},
				{
					"name": "AggDimDate",
					"description": "Derive Year Week"
				},
				{
					"name": "JoinWithDate"
				},
				{
					"name": "PivotWeekly"
				},
				{
					"name": "PivotDaily"
				},
				{
					"name": "SortWeekly"
				},
				{
					"name": "SortDaily"
				},
				{
					"name": "SelectWeekly"
				},
				{
					"name": "SelectDaily"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionSource",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CountryLookupSource",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DateDimension",
				"HospitalAdmissionSource select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenameColumns",
				"RenameColumns, CountryLookupSource lookup(RenameColumns@country == CountryLookupSource@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupCountryCode",
				"LookupCountryCode select(mapColumn(",
				"          country = RenameColumns@country,",
				"          indicator,",
				"          reported_date,",
				"          reported_year_week,",
				"          value,",
				"          source,",
				"          country = CountryLookupSource@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectPostLookup",
				"SelectPostLookup split(indicator == 'Weekly new hospital admissions per 100k' || indicator == 'Weekly new ICU admisions per 100k',",
				"     disjoint: false) ~> SeparationWeeklyDaily@(SourceWeeklyData, SourceDailyData)",
				"DateDimension derive(ecdc_year_week = year + '-W' + lpad(week_of_year,2,'0')) ~> DerivedYearWeek",
				"DerivedYearWeek aggregate(groupBy(ecdc_year_week),",
				"     week_start_date = min(date),",
				"          week_end_date = max(date)) ~> AggDimDate",
				"SeparationWeeklyDaily@SourceWeeklyData, AggDimDate join(reported_year_week == ecdc_year_week,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWithDate",
				"JoinWithDate pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          source,",
				"          week_start_date,",
				"          week_end_date),",
				"     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
				"     count = sum(value),",
				"     columnNaming: '$N_$V',",
				"     lateral: true) ~> PivotWeekly",
				"SeparationWeeklyDaily@SourceDailyData pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          source),",
				"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
				"     count = sum(value),",
				"     columnNaming: 'count$N_$V',",
				"     lateral: false) ~> PivotDaily",
				"PivotWeekly sort(desc(reported_year_week, true),",
				"     asc(country, true)) ~> SortWeekly",
				"PivotDaily sort(desc(reported_date, true),",
				"     asc(country, true)) ~> SortDaily",
				"SortWeekly select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          week_start_date,",
				"          week_end_date,",
				"          new_hospital_admission_count = {count_Weekly new hospital admissions per 100k},",
				"          new_icu_occupancy_count = {count_Weekly new ICU admissions per 100k},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectWeekly",
				"SortDaily select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          hospital_occupancy_count = {countcount_Daily hospital occupancy},",
				"          ICU_occupancy_count = {countcount_Daily ICU occupancy},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectDaily",
				"SelectDaily sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DestinationDaily",
				"SelectWeekly sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DestinationWeekly"
			]
		}
	}
}